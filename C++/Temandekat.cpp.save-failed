#include <iostream>
#include <bits/stdc++.h>
#include <math.h>

using namespace std;
void dekat (int arrX[],int arrY[],int N,int D)
{
    int i,j,Ma=-10000,Mi=10000;

    for(i=0; i<N-1; i++)
    {
        int T = 0;
        for(j=i+1; j<N; j++)
        {

            T = pow(abs(arrX[j] - arrX[i]),D) + pow(abs(arrY[j] - arrY[i]),D);
            Ma = max(T,Ma);
            Mi = min(T,Mi);
        }
    }

    if(Mi > Ma)
        cout << Ma << " " << Mi << endl;
    else
        cout << Mi << " " << Ma << endl;
}
int main()
{
    int N,D,i,f=0;
    cin >> N >> D;
    if(N >= 2 && N <= 1000 && D >=1 && D <= 3)
    {
        int X[N];
        int Y[N];
        for(i=0; i<N; i++)
        {
            cin >> X[i] >> Y[i];
            if(X[i] < 0 || X[i] > 100 || Y[i] < 0 || Y[i] > 100)
            {
                f++;
                break;
            }
        }
        if(f!=0)
        cout << " ";
        else
            dekat(X,Y,N,D);
    }
    return 0;
}
